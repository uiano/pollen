{
    "swagger": "2.0",
    "info": {
        "description": "This is the backend to the ICTSSS service.",
        "title": "ICT-Stack Self-Service API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "ICTSSS Support",
            "email": "\u003cTBD\u003e"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:3001",
    "basePath": "/api/v1",
    "paths": {
        "/admin/": {
            "get": {
                "description": "Fetches all admin users from DB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Fetches all admin users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/database.Admin"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "description": "Updates an admin user in DB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Updates an admin",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.RequestBodyAdminUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/database.Admin"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Adds a new admin user to DB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Adds a new admin",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.RequestBodyAdminCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/database.Admin"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "description": "Deletes an admin from DB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Deletes an admin",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.RequestBodyUserId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/database.Admin"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/admin/:id": {
            "get": {
                "description": "Fetches an admin user from the DB by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Fetches an admin user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin ID",
                        "name": "adminId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Admin"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/courses/": {
            "get": {
                "description": "Fetches a course or an array of courses from the Canvas API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Fetches courses from Canvas",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/courses/:id/groups": {
            "get": {
                "description": "Fetches the groups associated with a course in Canvas",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Fetches groups from course",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "courseId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/courses/:id/users": {
            "get": {
                "description": "Fetches the students associated with a course in Canvas",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Fetches students from course",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "courseId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/courses/groups/:id/users": {
            "get": {
                "description": "Fetches the students associated with a group in a Canvas course",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Fetches students in group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/image/": {
            "get": {
                "description": "Retrieves a list of images that can be used by admins",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "image"
                ],
                "summary": "Retrieve list of images",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Images"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "description": "Handles the updates on an image",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "image"
                ],
                "summary": "Updates an image",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "image",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateImageStruct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Images"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Adds a new image for use in the service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "image"
                ],
                "summary": "Add a new image",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "image",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.AddImageStruct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Images"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "description": "Deletes an image from the service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "image"
                ],
                "summary": "Deletes an image",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.ImageIdStruct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Images"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/image/:id": {
            "get": {
                "description": "Retrieves a specific image",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "image"
                ],
                "summary": "Retrieves an image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "501": {
                        "description": "Not Implemented"
                    }
                }
            }
        },
        "/image/config": {
            "get": {
                "description": "Fetches config files from hard drive",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "image"
                ],
                "summary": "Fetches config files",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/image/published": {
            "get": {
                "description": "Fetches images marked as published from DB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "image"
                ],
                "summary": "Fetches published images",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.PublishedImagesStruct"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/image/server": {
            "get": {
                "description": "Fetches images from OpenStack",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "image"
                ],
                "summary": "Fetches images",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Images"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/oauth2/logout": {
            "get": {
                "description": "Handler for a users logout",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "oauth2"
                ],
                "summary": "Handles Logout",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "406": {
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/oauth2/provider": {
            "get": {
                "description": "Handler for authenticating the login of a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "oauth2"
                ],
                "summary": "Handles Login",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "406": {
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/oauth2/redirect": {
            "get": {
                "description": "Handler for the redirecting of a user after a login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "oauth2"
                ],
                "summary": "Handles Redirect",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "406": {
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/oauth2/userdata": {
            "post": {
                "description": "Generates a console for a VM",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "oauth2"
                ],
                "summary": "Generates a console",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "406": {
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/vms/": {
            "get": {
                "description": "Gets all VMs assosciated with a user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vms"
                ],
                "summary": "Retrieves list of users VMs from DB",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.VirtualMachine"
                            }
                        }
                    }
                }
            }
        },
        "/vms/:id": {
            "delete": {
                "description": "Deletes the VM both in OpenStack and in DB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vms"
                ],
                "summary": "Deletes a VM",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Server ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.VirtualMachine"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "406": {
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/vms/:id/console": {
            "get": {
                "description": "Generates a console for a VM",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vms"
                ],
                "summary": "Generates a console",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Server ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "406": {
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/vms/:id/password": {
            "get": {
                "description": "Fetches the password for a VM",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vms"
                ],
                "summary": "Fetches VM password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Server ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "406": {
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/vms/:id/reboot": {
            "post": {
                "description": "Turns a VM off and on again.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vms"
                ],
                "summary": "Reboots a VM",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Server ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.VirtualMachine"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "406": {
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/vms/:id/respawn": {
            "post": {
                "description": "Deletes a VM and recreates it with the same parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vms"
                ],
                "summary": "Delete and recreate a VM",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "requestStruct",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.RequestBodyVmOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.VirtualMachine"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "406": {
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/vms/:id/start": {
            "post": {
                "description": "If the VM is SHUTOFF, tries to get it ACTIVE",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vms"
                ],
                "summary": "Starts a VM",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Server ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.VirtualMachine"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "406": {
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/vms/:id/status": {
            "get": {
                "description": "Retrieves the status of the VM then updates it in the DB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vms"
                ],
                "summary": "Updates status of VM",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Server ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.VirtualMachine"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "406": {
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/vms/:id/stop": {
            "post": {
                "description": "If the VM is ACTIVE, tries to get it SHUTOFF",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vms"
                ],
                "summary": "Stops a VM",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Server ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.VirtualMachine"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "406": {
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/vms/all": {
            "get": {
                "description": "Gets all VMs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vms"
                ],
                "summary": "Retrieves list of all VMs from DB",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.VirtualMachine"
                            }
                        }
                    }
                }
            }
        },
        "/vms/canvas": {
            "post": {
                "description": "Handles a request to create a new VM, for a student in a canvas course.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vms"
                ],
                "summary": "Creates a new VM",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "requestStruct",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.RequestBodyVmOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.VirtualMachine"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "406": {
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/vms/canvas/all": {
            "post": {
                "description": "Handles a request to create a new VM, for all students in a canvas course",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vms"
                ],
                "summary": "Creates a new VM",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "requestStruct",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.RequestBodyVmOrderAll"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.VirtualMachine"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "406": {
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "database.Admin": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "database.Images": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "imageConfig": {
                    "type": "string"
                },
                "imageDescription": {
                    "type": "string"
                },
                "imageDisplayName": {
                    "type": "string"
                },
                "imageId": {
                    "type": "string"
                },
                "imageName": {
                    "type": "string"
                },
                "imageReadRootPassword": {
                    "type": "boolean"
                },
                "published": {
                    "type": "string"
                }
            }
        },
        "database.VirtualMachine": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "groupMembers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "imageDisplayName": {
                    "type": "string"
                },
                "imageReadRootPassword": {
                    "type": "boolean"
                },
                "serverId": {
                    "type": "string"
                },
                "serverImage": {
                    "type": "string"
                },
                "serverIp": {
                    "type": "string"
                },
                "serverName": {
                    "type": "string"
                },
                "serverStatus": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "v1.AddImageStruct": {
            "type": "object",
            "properties": {
                "image_config": {
                    "type": "string"
                },
                "image_description": {
                    "type": "string"
                },
                "image_display_name": {
                    "type": "string"
                },
                "image_id": {
                    "type": "string"
                },
                "image_name": {
                    "type": "string"
                },
                "image_read_root_password": {
                    "type": "boolean"
                },
                "published": {
                    "type": "string"
                }
            }
        },
        "v1.ImageIdStruct": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "v1.PublishedImagesStruct": {
            "type": "object",
            "properties": {
                "imageDisplayName": {
                    "type": "string"
                },
                "imageId": {
                    "type": "string"
                }
            }
        },
        "v1.RequestBodyAdminCreate": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "v1.RequestBodyAdminUpdate": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "updated_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "v1.RequestBodyUserId": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string"
                }
            }
        },
        "v1.RequestBodyVmOrder": {
            "type": "object",
            "properties": {
                "group_name": {
                    "type": "string"
                },
                "server_image": {
                    "type": "string"
                },
                "server_name": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v1.RequestBodyVmOrderAll": {
            "type": "object",
            "properties": {
                "course_code": {
                    "type": "string"
                },
                "everyone": {
                    "type": "string"
                },
                "group_name": {
                    "type": "string"
                },
                "include_ta": {
                    "type": "string"
                },
                "include_teacher": {
                    "type": "string"
                },
                "server_image": {
                    "type": "string"
                },
                "server_name": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v1.UpdateImageStruct": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "image_config": {
                    "type": "string"
                },
                "image_description": {
                    "type": "string"
                },
                "image_display_name": {
                    "type": "string"
                },
                "image_id": {
                    "type": "string"
                },
                "image_name": {
                    "type": "string"
                },
                "image_read_root_password": {
                    "type": "boolean"
                },
                "published": {
                    "type": "string"
                }
            }
        }
    }
}